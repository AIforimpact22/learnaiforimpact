{
  "order": 8,
  "title": "Module 8: Operational LLMs: Explain, Extract, Automate",
  "lessons": [
    {
      "kind": "article",
      "order": 1,
      "title": "LLM Module — Introduction",
      "content": {
        "body_md": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"utf-8\" />\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n<title>LLM Module — Introduction</title>\r\n\r\n<style>\r\n/* === Global resets === */\r\n*{box-sizing:border-box;word-wrap:break-word;overflow-wrap:break-word}\r\nbody{font:16px/1.55 system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;color:#555;margin:0;background:#fff}\r\na{color:#000;text-decoration:underline}\r\ncode,pre{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace}\r\n\r\n/* === Page wrap === */\r\n.wrap{max-width:1080px;margin:0 auto;padding:18px}\r\n\r\n/* === Card container === */\r\n.section-card{\r\n  border:1px solid #EBEBEB;border-radius:14px;overflow:hidden;\r\n  box-shadow:0 1px 2px rgba(0,0,0,.04);margin-bottom:24px;background:#ffffff\r\n}\r\n\r\n/* === Banner / header (dark gradient → white text) === */\r\n.section-card .banner{\r\n  background:linear-gradient(120deg,#555555,#000000);\r\n  color:#FFFFFF;padding:18px 20px\r\n}\r\n.section-card .banner small{font-size:12px;letter-spacing:.08em;opacity:.9;text-transform:uppercase;color:#FFFFFF}\r\n.section-card .banner h1{margin:6px 0 4px;font-size:26px;line-height:1.2;color:#FFFFFF}\r\n.section-card .banner p{margin:0;opacity:.95;color:#FFFFFF}\r\n\r\n/* === Body === */\r\n.section-card .body{padding:20px}\r\n.section-card p,.section-card li{font-size:16px;margin-top:0;color:#555}\r\n\r\n/* === Pills & tags === */\r\n.pills{display:flex;flex-wrap:wrap;gap:8px;margin-top:8px}\r\n.pill{display:inline-block;padding:6px 10px;border:1px solid #A3A3A3;border-radius:999px;background:#BDBDBD;color:#000;font-size:13px;font-weight:700}\r\n\r\n/* === Grids & boxes (horizontal, no overflow) === */\r\n.grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(280px,1fr));gap:14px}\r\n.box{border:1px solid #EBEBEB;border-radius:10px;background:#fff;padding:14px}\r\n.box h3{margin:0 0 8px;color:#000;font-size:18px}\r\n\r\n/* === Two-column side-by-side section === */\r\n.split{display:grid;grid-template-columns:repeat(auto-fit,minmax(320px,1fr));gap:14px}\r\n\r\n/* === Call-to-action buttons === */\r\n.cta-row{display:flex;gap:10px;margin-top:18px;flex-wrap:wrap}\r\n.cta-row a{text-decoration:none;padding:10px 16px;border-radius:8px;font-weight:700}\r\n.cta-primary{border:1px solid #000;background:#000;color:#EBEBEB}\r\n.cta-secondary{border:1px solid #000;color:#000;background:#ffffff}\r\n\r\n/* === Footer === */\r\n.footer-note{font-size:13px;color:#777;text-align:center;margin:30px 0 10px}\r\n</style>\r\n</head>\r\n<body>\r\n<div class=\"wrap\">\r\n\r\n  <!-- INTRO / TITLES -->\r\n  <section class=\"section-card\">\r\n    <div class=\"banner\">\r\n      <small>Module • Large Language Models (LLMs)</small>\r\n      <h1>From Data to Narrative — and Back Again</h1>\r\n      <p>How LLMs help you explain your data, collect new data from language, and build smarter apps.</p>\r\n    </div>\r\n    <div class=\"body\">\r\n      <p><strong>Suggested module titles</strong> (pick one):</p>\r\n      <div class=\"pills\">\r\n        <span class=\"pill\">Data ↔ Narrative with LLMs</span>\r\n      </div>\r\n\r\n      <p style=\"margin-top:12px\">\r\n        This module is about <em>two-way translation</em> between numbers and words. LLMs can\r\n        turn your <strong>data</strong> (tables, time series, logs) into <strong>clear narratives</strong>\r\n        your team understands, and they can turn messy <strong>language</strong> (emails, forms, reports)\r\n        into <strong>structured data</strong> your systems can query. You’ll learn patterns that\r\n        make this reliable, safe, and useful in real products.\r\n      </p>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- WHY LLMs -->\r\n  <section class=\"section-card\">\r\n    <div class=\"banner\">\r\n      <small>Why it matters</small>\r\n      <h1>LLMs bridge people and data</h1>\r\n      <p>Explain complex insights and capture new signals with the same interface: natural language.</p>\r\n    </div>\r\n    <div class=\"body split\">\r\n      <div class=\"box\">\r\n        <h3>Data → Narrative (generation)</h3>\r\n        <ul>\r\n          <li><strong>Explain KPIs:</strong> “Why did revenue drop 8% last week?” → concise, source‑linked summary.</li>\r\n          <li><strong>Describe segments:</strong> Turn cluster profiles into human‑readable personas.</li>\r\n          <li><strong>Auto‑reports:</strong> Weekly ops memo from SQL results + charts.</li>\r\n          <li><strong>Decision notes:</strong> Translate anomaly alerts into next‑step actions.</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>Narrative → Data (extraction/structuring)</h3>\r\n        <ul>\r\n          <li><strong>Email → JSON:</strong> Pull dates, amounts, IDs into a schema your DB accepts.</li>\r\n          <li><strong>Docs → rows:</strong> Extract tables from PDFs and normalize field names.</li>\r\n          <li><strong>Text → SQL intent:</strong> “Show top branches by growth” → validated SQL.</li>\r\n          <li><strong>Chat → tickets:</strong> Turn conversation into labeled tasks with priorities.</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- COMMON PATTERNS -->\r\n  <section class=\"section-card\">\r\n    <div class=\"banner\">\r\n      <small>Patterns</small>\r\n      <h1>What you’ll build and practice</h1>\r\n      <p>Reusable blueprints that survive real‑world data and users.</p>\r\n    </div>\r\n    <div class=\"body grid\">\r\n      <div class=\"box\">\r\n        <h3>LLM Report Writer</h3>\r\n        <p>Feed metrics and charts; get a well‑structured executive summary with “so what / now what”.</p>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>SQL Co‑pilot</h3>\r\n        <p>Natural‑language questions to validated SQL over your schema (with safety checks and examples).</p>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>JSON Extractor</h3>\r\n        <p>Schema‑constrained extraction (e.g., <code>{date, branch_id, issue, severity}</code>) from free text.</p>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>RAG Q&A over Docs</h3>\r\n        <p>Retrieve relevant passages from your knowledge base; generate grounded answers with citations.</p>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>Classification & Routing</h3>\r\n        <p>Tag messages and route them (support, risk, sales) with confidence thresholds and fallbacks.</p>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- GUARDRAILS -->\r\n  <section class=\"section-card\">\r\n    <div class=\"banner\">\r\n      <small>Reliability</small>\r\n      <h1>Good practices & guardrails</h1>\r\n      <p>Make outputs trustworthy and operations sustainable.</p>\r\n    </div>\r\n    <div class=\"body grid\">\r\n      <div class=\"box\">\r\n        <h3>Validation</h3>\r\n        <ul>\r\n          <li>Never trust blindly; validate numbers and IDs against your DB.</li>\r\n          <li>Use <strong>schema‑constrained</strong> outputs (JSON) and reject on mismatch.</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>Determinism</h3>\r\n        <ul>\r\n          <li>Lower temperature for consistency; add examples in prompts.</li>\r\n          <li>Keep <strong>prompt + test cases</strong> in version control.</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>Privacy & cost</h3>\r\n        <ul>\r\n          <li>Mask PII; minimize context; cache frequent results.</li>\r\n          <li>Prefer <strong>retrieval</strong> over giant prompts.</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"box\">\r\n        <h3>Failure handling</h3>\r\n        <ul>\r\n          <li>Set timeouts, retries, and user‑visible fallbacks.</li>\r\n          <li>Log inputs/outputs for audit and continuous improvement.</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <!-- HOW IT FITS -->\r\n  <section class=\"section-card\">\r\n    <div class=\"banner\">\r\n      <small>Where it fits</small>\r\n      <h1>Your data + LLM workflow</h1>\r\n      <p>Plug LLMs into the stack you already built (DB, dashboards, apps).</p>\r\n    </div>\r\n    <div class=\"body\">\r\n      <ol>\r\n        <li><strong>Prepare data:</strong> SQL/warehouse tables, clean columns, meaningful names.</li>\r\n        <li><strong>Choose direction:</strong> Data→Narrative (explain) or Narrative→Data (extract) — or both.</li>\r\n        <li><strong>Design prompt + schema:</strong> Examples, constraints, and a target JSON shape when needed.</li>\r\n        <li><strong>Validate & store:</strong> Check outputs, write to DB, and surface in your UI.</li>\r\n        <li><strong>Monitor:</strong> Track quality, latency, and errors; iterate prompts and retrieval.</li>\r\n      </ol>\r\n\r\n      <div class=\"cta-row\">\r\n        <a class=\"cta-primary\" href=\"#llm-setup\">Next: Set up your LLM environment</a>\r\n        <a class=\"cta-secondary\" href=\"#module-index\">Back to module index</a>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <div class=\"footer-note\">© <span id=\"y\"></span> Hawkar — Last updated <span id=\"d\"></span></div>\r\n</div>\r\n\r\n<script>\r\n(function(){\r\n  const now=new Date();\r\n  document.getElementById('y').textContent=now.getFullYear();\r\n  document.getElementById('d').textContent=now.toLocaleDateString(undefined,{year:'numeric',month:'short',day:'2-digit'});\r\n})();\r\n</script>\r\n</body>\r\n</html>"
      },
      "lesson_uid": "571829ac-3bbe-4b54-ae81-04a9fcff5f0b"
    },
    {
      "kind": "article",
      "order": 2,
      "title": "General‑Purpose LLM APIs — Access, Usage & Pricing",
      "content": {
        "body_md": "<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title>General‑Purpose LLM APIs — Access, Usage & Pricing (as of 28 Sep 2025)</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <style>\r\n    :root{\r\n      --ink:#0b1220;--ink-soft:#344054;--bg:#ffffff;--bg-soft:#BDBDBD;\r\n      --accent:#4f46e5;--accent-2:#22c55e;--muted:#6b7280;--ok:#16a34a;\r\n    }\r\n    html,body{margin:0;padding:0;background:var(--bg);color:var(--ink);font-family:Inter,Segoe UI,system-ui,-apple-system,Helvetica,Arial,sans-serif;line-height:1.55}\r\n    .hero{\r\n      background:linear-gradient(180deg,#111827 0%,#0b1220 60%,#1f2937 100%);\r\n      color:#fff;padding:56px 24px 40px\r\n    }\r\n    .wrap{max-width:1080px;margin:0 auto}\r\n    h1{font-size: clamp(28px,4vw,40px);letter-spacing:.2px;margin:0 0 8px}\r\n    .subtitle{color:#d1d5db;font-size:15px}\r\n    .tag{display:inline-block;font-size:12px;letter-spacing:.4px;color:#111827;background:#BDBDBD;border-radius:999px;padding:6px 10px;margin-right:8px}\r\n    .content{padding:28px 24px}\r\n    h2{font-size: clamp(22px,3vw,28px);margin:28px 0 8px}\r\n    h3{font-size:18px;margin:18px 0 6px}\r\n    p{margin:10px 0}\r\n    .note{background:#BDBDBD;padding:12px 14px;border-radius:10px;color:#111827}\r\n    .grid{display:grid;grid-template-columns:repeat(12,1fr);gap:16px}\r\n    .card{\r\n      grid-column: span 12; background:#fff;border:1px solid #e5e7eb;border-radius:14px;padding:18px;\r\n      box-shadow:0 1px 0 rgba(16,24,40,.04)\r\n    }\r\n    @media(min-width:860px){.card--half{grid-column: span 6}}\r\n    .provider{\r\n      display:flex;flex-direction:column;gap:10px;border-left:4px solid var(--accent);padding-left:14px\r\n    }\r\n    .provider h3{margin:0}\r\n    .bullets{margin:6px 0 0 18px}\r\n    .kv{display:grid;grid-template-columns: 140px 1fr;gap:8px;margin:8px 0}\r\n    .kv div:first-child{color:var(--muted)}\r\n    .pill{display:inline-block;background:#BDBDBD;color:#111827;border-radius:999px;padding:4px 10px;font-size:12px;margin:2px 6px 2px 0}\r\n    a{color:var(--accent);text-decoration:none}\r\n    a:hover{text-decoration:underline}\r\n    code{background:#BDBDBD;color:#111827;padding:2px 6px;border-radius:6px}\r\n    .matrix{border-collapse:collapse;width:100%;overflow:auto;border:1px solid #e5e7eb;border-radius:10px}\r\n    .matrix th,.matrix td{padding:10px 12px;border-top:1px solid #f1f5f9;text-align:left}\r\n    .matrix th{background:#f8fafc;font-weight:600}\r\n    .footer{border-top:1px dashed #e5e7eb;margin-top:28px;padding-top:20px;color:var(--muted);font-size:14px}\r\n  </style>\r\n</head>\r\n<body>\r\n  <header class=\"hero\">\r\n    <div class=\"wrap\">\r\n      <div class=\"tag\">Guide</div>\r\n      <div class=\"tag\">Updated: 28 Sep 2025</div>\r\n      <h1>General‑Purpose LLM APIs — where to get access, how to use them, and how pricing works</h1>\r\n      <p class=\"subtitle\">This page explains access & usage patterns and links to the official pricing pages for the major providers. Always verify on the live pages before launch.</p>\r\n    </div>\r\n  </header>\r\n\r\n  <main class=\"content wrap\">\r\n\r\n    <section class=\"card\">\r\n      <h2>How LLM API pricing generally works (quick primer)</h2>\r\n      <ul class=\"bullets\">\r\n        <li><strong>Pay‑as‑you‑go</strong> — usually priced <em>per million tokens</em>. Inputs and outputs can have different rates.</li>\r\n        <li><strong>Multimodal</strong> — text is standard; many APIs also price <em>image generation</em>, <em>vision</em>, <em>speech‑to‑text</em>, <em>text‑to‑speech</em>, and <em>embeddings</em> separately.</li>\r\n        <li><strong>Free tiers / credits</strong> — some offer trials or monthly free quotas; production usage is billed.</li>\r\n        <li><strong>Tokens</strong> ≈ sub‑word units. Longer prompts/responses consume more tokens; providers often include calculators or examples.</li>\r\n      </ul>\r\n      <p class=\"note\"><strong>Tip:</strong> Budget by multiplying your average <em>input</em> tokens + expected <em>output</em> tokens by the model’s per‑million rates. Cache, truncate context, and stream outputs to control costs.</p>\r\n    </section>\r\n\r\n    <!-- Providers -->\r\n    <section class=\"grid\">\r\n      <div class=\"card card--half\">\r\n        <div class=\"provider\" style=\"border-color:#7c3aed\">\r\n          <h3>OpenAI (GPT family)</h3>\r\n          <div class=\"kv\"><div>Access</div><div>Create an OpenAI Platform account, generate an API key, call Chat/Responses, Images, Audio.</div></div>\r\n          <div class=\"kv\"><div>Usage</div><div>Text generation & tools; image generation; speech‑to‑text and text‑to‑speech — all usage‑metered.</div></div>\r\n          <div class=\"kv\"><div>Pricing</div><div>See the live <a href=\"https://openai.com/pricing\" target=\"_blank\" rel=\"noopener\">OpenAI Pricing</a>.</div></div>\r\n          <div>\r\n            <span class=\"pill\">Text</span><span class=\"pill\">Vision</span><span class=\"pill\">Images</span><span class=\"pill\">Audio (STT/TTS)</span><span class=\"pill\">Embeddings</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card card--half\">\r\n        <div class=\"provider\" style=\"border-color:#0ea5e9\">\r\n          <h3>Google Gemini (Developer API / AI Studio)</h3>\r\n          <div class=\"kv\"><div>Access</div><div>Get an API key in Google AI Studio (or use Vertex AI for enterprise).</div></div>\r\n          <div class=\"kv\"><div>Usage</div><div>Text/code generation, vision (image/video understanding), function/tool use.</div></div>\r\n          <div class=\"kv\"><div>Pricing</div><div>Check <a href=\"https://ai.google.dev/pricing\" target=\"_blank\" rel=\"noopener\">Gemini Developer API Pricing</a>.</div></div>\r\n          <div><span class=\"pill\">Text</span><span class=\"pill\">Vision</span><span class=\"pill\">Function calling</span></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card card--half\">\r\n        <div class=\"provider\" style=\"border-color:#22c55e\">\r\n          <h3>Anthropic Claude</h3>\r\n          <div class=\"kv\"><div>Access</div><div>Create a key in the Anthropic console; call the Messages API.</div></div>\r\n          <div class=\"kv\"><div>Usage</div><div>Reasoning‑focused text with tool use; image inputs supported.</div></div>\r\n          <div class=\"kv\"><div>Pricing</div><div>See the current <a href=\"https://www.anthropic.com/pricing\" target=\"_blank\" rel=\"noopener\">Claude Pricing</a>.</div></div>\r\n          <div><span class=\"pill\">Text</span><span class=\"pill\">Vision (input)</span><span class=\"pill\">Tools</span></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card card--half\">\r\n        <div class=\"provider\" style=\"border-color:#ef4444\">\r\n          <h3>xAI Grok</h3>\r\n          <div class=\"kv\"><div>Access</div><div>Generate a key in the xAI console; use chat/completions and tools.</div></div>\r\n          <div class=\"kv\"><div>Usage</div><div>Text and tool use; vision support varies by model generation.</div></div>\r\n          <div class=\"kv\"><div>Pricing</div><div>See the <a href=\"https://docs.x.ai/docs/getting-started\" target=\"_blank\" rel=\"noopener\">xAI API docs</a> for models & pricing.</div></div>\r\n          <div><span class=\"pill\">Text</span><span class=\"pill\">Tools</span></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card card--half\">\r\n        <div class=\"provider\" style=\"border-color:#f59e0b\">\r\n          <h3>Cohere (Command / Aya / Embed / Rerank)</h3>\r\n          <div class=\"kv\"><div>Access</div><div>Trial API key for evaluation; Production key for paid use.</div></div>\r\n          <div class=\"kv\"><div>Usage</div><div>Text generation, multilingual, embeddings, reranking. Enterprise/private deployment options.</div></div>\r\n          <div class=\"kv\"><div>Pricing</div><div>See <a href=\"https://cohere.com/pricing\" target=\"_blank\" rel=\"noopener\">Cohere Pricing</a> (trial vs production, and model tiers).</div></div>\r\n          <div><span class=\"pill\">Text</span><span class=\"pill\">Embeddings</span><span class=\"pill\">Rerank</span></div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Picking guidance -->\r\n    <section class=\"card\">\r\n      <h2>What to pick (quick suggestions)</h2>\r\n      <table class=\"matrix\">\r\n        <thead>\r\n          <tr><th>If you need…</th><th>Consider</th><th>Why</th></tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr><td>Unified text + image gen + audio in one place</td><td>OpenAI</td><td>Broad modality coverage and mature SDKs/docs.</td></tr>\r\n          <tr><td>Fast, cost‑optimized text/vision for apps</td><td>Google Gemini (Flash tiers)</td><td>Speed‑oriented tiers with clear per‑token pricing.</td></tr>\r\n          <tr><td>Analytical reasoning & tool use</td><td>Anthropic Claude</td><td>Strong reasoning‑focused models.</td></tr>\r\n          <tr><td>Simple alternative stack with clear usage table</td><td>xAI Grok</td><td>Lean API surface and transparent pricing docs.</td></tr>\r\n          <tr><td>Enterprise search/RAG (embeddings, rerank)</td><td>Cohere</td><td>Focused retrieval models and enterprise options.</td></tr>\r\n        </tbody>\r\n      </table>\r\n    </section>\r\n\r\n    <!-- Getting started -->\r\n    <section class=\"card\">\r\n      <h2>Getting started (same 5 steps almost everywhere)</h2>\r\n      <ol class=\"bullets\">\r\n        <li>Create an account and <strong>API key</strong> in the provider console.</li>\r\n        <li>Store the key in a <strong>secret</strong> (env var, vault).</li>\r\n        <li>Install the SDK or call HTTPS; start with a basic <code>chat</code>/<code>text</code> endpoint.</li>\r\n        <li>Estimate cost: (<em>input tokens</em> + <em>output tokens</em>) × <em>per‑million rate</em> for your model.</li>\r\n        <li>Add modalities (vision, image gen, STT/TTS) only if needed; monitor usage in the dashboard.</li>\r\n      </ol>\r\n      <p class=\"note\"><strong>Keep costs in check:</strong> prefer shorter prompts, reuse system prompts, enable streaming, cache retrieval results, and log token usage per request.</p>\r\n    </section>\r\n\r\n    <section class=\"footer\">\r\n      <p><strong>Important:</strong> Pricing and model availability change quickly. Use the provider links above for the authoritative, latest numbers before you ship.</p>\r\n    </section>\r\n  </main>\r\n</body>\r\n</html>"
      },
      "lesson_uid": "11194a30-8c0c-4b5f-a108-0fe095f0bd66"
    },
    {
      "kind": "article",
      "order": 3,
      "title": "Data Apps in Practice",
      "content": {
        "body_md": "<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title>LLM + Data Apps in Practice — Gemini‑powered Advice on Top of Deterministic Calculators</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <style>\r\n    :root{\r\n      --ink:#0b1220;--ink-soft:#374151;--bg:#ffffff;--bg-soft:#BDBDBD;\r\n      --brand:#2f6feb;--ok:#16a34a;--warn:#f59e0b;--danger:#dc2626;\r\n    }\r\n    html,body{margin:0;padding:0;background:var(--bg);color:var(--ink);\r\n      font-family:Inter,Segoe UI,system-ui,-apple-system,Helvetica,Arial,sans-serif;line-height:1.55}\r\n    .hero{background:linear-gradient(180deg,#0f172a 0%,#1f2937 60%,#334155 100%);color:#fff;padding:56px 24px 40px}\r\n    .wrap{max-width:1080px;margin:0 auto}\r\n    h1{font-size:clamp(28px,4vw,40px);letter-spacing:.2px;margin:0 0 8px}\r\n    .subtitle{color:#e5e7eb;font-size:15px}\r\n    .pill{display:inline-block;background:#BDBDBD;color:#111827;border-radius:999px;padding:6px 10px;font-size:12px;margin:0 8px 0 0}\r\n    .content{padding:28px 24px}\r\n    h2{font-size:clamp(22px,3vw,28px);margin:28px 0 10px}\r\n    h3{font-size:18px;margin:18px 0 6px}\r\n    p{margin:10px 0}\r\n    a{color:var(--brand);text-decoration:none}\r\n    a:hover{text-decoration:underline}\r\n    .grid{display:grid;grid-template-columns:repeat(12,1fr);gap:16px}\r\n    .card{\r\n      grid-column:span 12;background:#fff;border:1px solid #e5e7eb;border-radius:14px;padding:18px;\r\n      box-shadow:0 1px 0 rgba(16,24,40,.04)\r\n    }\r\n    @media(min-width:860px){.half{grid-column:span 6}}\r\n    .note{background:var(--bg-soft);color:#111827;border-radius:12px;padding:12px 14px}\r\n    .list{margin:6px 0 0 18px}\r\n    .kv{display:grid;grid-template-columns:160px 1fr;gap:8px;margin:10px 0}\r\n    .kv div:first-child{color:#6b7280}\r\n    .imgcard{\r\n      border:1px solid #e5e7eb;border-radius:12px;overflow:hidden;background:#fff\r\n    }\r\n    .imgcard img{display:block;width:100%;height:auto}\r\n    .imgcap{padding:8px 12px;font-size:13px;color:#374151;background:#fafafa;border-top:1px solid #f1f5f9}\r\n    .flow{\r\n      display:grid;grid-template-columns:repeat(5,1fr);gap:10px;align-items:stretch;margin-top:8px\r\n    }\r\n    .flow .box{background:#fff;border:1px solid #e5e7eb;border-radius:10px;padding:12px}\r\n    .flow .box h4{margin:0 0 6px;font-size:14px}\r\n    .flow .box p{margin:0;font-size:13px;color:#374151}\r\n    .bul{margin:6px 0 0 18px}\r\n    code,pre{background:#BDBDBD;color:#111827;border-radius:6px}\r\n    code{padding:2px 6px}\r\n    pre{padding:10px 12px;overflow:auto}\r\n    .footer{border-top:1px dashed #e5e7eb;margin-top:28px;padding-top:18px;color:#6b7280;font-size:14px}\r\n  </style>\r\n</head>\r\n<body>\r\n  <!-- HERO -->\r\n  <header class=\"hero\">\r\n    <div class=\"wrap\">\r\n      <span class=\"pill\">Real App Case Study</span>\r\n      <span class=\"pill\">Gemini API</span>\r\n      <h1>LLM + Data Apps in Practice</h1>\r\n      <p class=\"subtitle\">How a deterministic calculator becomes an intelligent advisor: solar sizing with device inventory + Gemini suggestions, and an exam agent that auto‑generates questions and grading.</p>\r\n    </div>\r\n  </header>\r\n\r\n  <main class=\"content wrap\">\r\n\r\n    <!-- WHAT THIS PAGE COVERS -->\r\n    <section class=\"card\">\r\n      <h2>What this page covers</h2>\r\n      <ul class=\"list\">\r\n        <li><strong>Baseline app:</strong> a Streamlit calculator that sizes solar panels & cost from a user’s device inventory.</li>\r\n        <li><strong>LLM add‑on (Gemini):</strong> for each entered device, propose <em>lower‑consumption alternatives</em> and <em>usage tips</em> to reduce load & budget.</li>\r\n        <li><strong>Second example:</strong> an exam agent that reads the week’s content, <em>generates questions</em>, understands your answers, and <em>scores</em> them.</li>\r\n        <li><strong>Design patterns:</strong> prompts, data passed to the LLM, guardrails, cost control, and UI feedback loops.</li>\r\n      </ul>\r\n      <p class=\"note\"><strong>Live demo (solar):</strong> <a href=\"https://coolassistant.streamlit.app/\" target=\"_blank\" rel=\"noopener\">coolassistant.streamlit.app</a></p>\r\n    </section>\r\n\r\n    <!-- SOLAR CALCULATOR + LLM -->\r\n    <section class=\"grid\">\r\n      <div class=\"card\">\r\n        <h2>Case 1 — Solar sizing with Gemini‑powered advice</h2>\r\n        <div class=\"kv\">\r\n          <div>Goal</div>\r\n          <div>Turn a static sizing tool into a <em>smart advisor</em> that suggests lower‑wattage substitutes and consumption tips per device.</div>\r\n        </div>\r\n        <div class=\"kv\">\r\n          <div>Baseline</div>\r\n          <div>Users enter a device inventory (wattage × hours × quantity). The app computes daily kWh, required PV size, and estimated cost.</div>\r\n        </div>\r\n        <div class=\"kv\">\r\n          <div>LLM step</div>\r\n          <div>For each device, Gemini proposes alternative models/approaches with lower energy draw, then the UI shows “what to replace/change” and “how much you save”.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"card half imgcard\">\r\n        <img alt=\"Inventory data entry UI\" src=\"https://i.imgur.com/XgvJLZb.png\" />\r\n        <div class=\"imgcap\">Data entry: add devices, wattage, hours, quantity (deterministic calculation stays local).</div>\r\n      </div>\r\n\r\n      <div class=\"card half imgcard\">\r\n        <img alt=\"Gemini feedback on inventory\" src=\"https://i.imgur.com/2LqdgBo.png\" />\r\n        <div class=\"imgcap\">LLM feedback: for each device, suggest a lower‑consumption alternative and practical tips.</div>\r\n      </div>\r\n\r\n      <div class=\"card\">\r\n        <h3>How the flow works</h3>\r\n        <div class=\"flow\">\r\n          <div class=\"box\">\r\n            <h4>1) User inputs</h4>\r\n            <p>Device list → wattage, hours/day, qty.</p>\r\n          </div>\r\n          <div class=\"box\">\r\n            <h4>2) Local math</h4>\r\n            <p>Compute daily kWh, PV size, panel count, cost.</p>\r\n          </div>\r\n          <div class=\"box\">\r\n            <h4>3) Compact context</h4>\r\n            <p>Create a minimal JSON of devices (name, W, h, qty).</p>\r\n          </div>\r\n          <div class=\"box\">\r\n            <h4>4) Gemini call</h4>\r\n            <p>Prompt asks for lower‑watt alternatives + usage tips.</p>\r\n          </div>\r\n          <div class=\"box\">\r\n            <h4>5) Merge advice</h4>\r\n            <p>Show suggestions alongside the calculator results.</p>\r\n          </div>\r\n        </div>\r\n\r\n        <h3 style=\"margin-top:16px\">Prompt pattern (concept)</h3>\r\n        <pre><code>// System (intent)\r\nYou are an energy-efficiency advisor. Be specific, practical, and safe.\r\n\r\n// User (structured input)\r\nDevices (JSON):\r\n[\r\n  {\"name\":\"TV 55in LED\",\"watt\":110,\"hours\":5,\"qty\":1},\r\n  {\"name\":\"Fridge 300L\",\"watt\":180,\"hours\":24,\"qty\":1}\r\n]\r\nConstraints:\r\n- Prefer alternatives that are realistically available in 2024–2025.\r\n- Give ballpark watt ranges and % savings.\r\n- Return JSON with fields: device, suggestion, est_savings_watts, notes.</code></pre>\r\n\r\n        <h3>What the LLM adds (beyond math)</h3>\r\n        <ul class=\"bul\">\r\n          <li>Suggests <strong>market‑plausible alternatives</strong> (e.g., inverter fridges, LED options, high‑efficiency AC).</li>\r\n          <li>Reframes user behavior (<em>off‑peak use, smart plugs, thermostat ranges</em>) to lower baseline load.</li>\r\n          <li>Provides <em>explanations</em> that improve trust and decisions, not just numbers.</li>\r\n        </ul>\r\n\r\n        <h3>Guardrails & cost control</h3>\r\n        <ul class=\"bul\">\r\n          <li><strong>Scope the context:</strong> send only the compact device JSON, not the whole session.</li>\r\n          <li><strong>Ask for structured output:</strong> JSON fields you can render deterministically.</li>\r\n          <li><strong>Disclaimers:</strong> “Models/examples are indicative. Prices/availability vary.”</li>\r\n          <li><strong>Token budget:</strong> cap response length, reuse a fixed system prompt, cache common device tips.</li>\r\n        </ul>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- EXAM AGENT -->\r\n    <section class=\"card\">\r\n      <h2>Case 2 — Exam agent: generate questions, understand answers, assign marks</h2>\r\n      <div class=\"kv\">\r\n        <div>Goal</div>\r\n        <div>Make weekly assessments dynamic: the agent ingests the week’s content, produces questions, evaluates free‑text answers, and gives <em>rubric‑based</em> scores.</div>\r\n      </div>\r\n      <div class=\"kv\">\r\n        <div>Inputs</div>\r\n        <div>Week content (text/notes), difficulty & topics, student answers.</div>\r\n      </div>\r\n      <div class=\"kv\">\r\n        <div>Outputs</div>\r\n        <div>Question set, model answers, per‑answer scores, and feedback.</div>\r\n      </div>\r\n      <h3>High‑level workflow</h3>\r\n      <div class=\"flow\">\r\n        <div class=\"box\"><h4>1) Ingest</h4><p>Upload week content; extract key points.</p></div>\r\n        <div class=\"box\"><h4>2) Generate</h4><p>Create MCQ/short/long questions + answer keys.</p></div>\r\n        <div class=\"box\"><h4>3) Answer</h4><p>Learner responds in the app.</p></div>\r\n        <div class=\"box\"><h4>4) Evaluate</h4><p>Gemini grades against rubric + model answers.</p></div>\r\n        <div class=\"box\"><h4>5) Feedback</h4><p>Scores + guidance; repeat for mastery.</p></div>\r\n      </div>\r\n      <h3>Prompt cues (concept)</h3>\r\n      <pre><code>// System: course TA\r\nProduce N questions from the provided notes. Include model answers and a scoring rubric.\r\nWhen grading, return JSON: {question_id, score_0_1, feedback} for each answer.</code></pre>\r\n      <p class=\"note\"><strong>Tip:</strong> Keep grading deterministic by asking for <em>scores mapped to a rubric</em> and requiring <em>structured JSON</em>.</p>\r\n    </section>\r\n\r\n    <!-- TAKEAWAYS -->\r\n    <section class=\"card\">\r\n      <h2>Takeaways</h2>\r\n      <ul class=\"list\">\r\n        <li>Start with a <strong>deterministic core</strong> (math, SQL, rules). Add LLMs for <strong>explanations, alternatives, and evaluation</strong>.</li>\r\n        <li>Pass only the <strong>data that matters</strong> (compact JSON). Ask for <strong>structured outputs</strong> you can render and store.</li>\r\n        <li>Guardrails matter: “no guarantees”, avoid brand claims, and keep privacy in mind (no PII to the model).</li>\r\n        <li>Measure impact: how many LLM tips the user accepts; resulting kWh drop; improved quiz mastery over time.</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section class=\"footer\">\r\n      <div>Demo: <a href=\"https://coolassistant.streamlit.app/\" target=\"_blank\" rel=\"noopener\">coolassistant.streamlit.app</a></div>\r\n      <div>Images: Solar data entry & Gemini feedback (provided screenshots).</div>\r\n    </section>\r\n  </main>\r\n</body>\r\n</html>"
      },
      "lesson_uid": "5794f70e-1824-4bc2-bccd-29220bd80cd1"
    },
    {
      "kind": "article",
      "order": 4,
      "title": "LLM‑Powered Data Labeling (API)",
      "content": {
        "body_md": "<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title>LLM‑Powered Data Labeling (API) — Grocery Families Classifier with OpenAI</title>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <style>\r\n    :root{\r\n      --ink:#0b1220;--ink-soft:#374151;--bg:#ffffff;--bg-soft:#BDBDBD;\r\n      --brand:#2f6feb;--ok:#16a34a;--warn:#f59e0b;--danger:#dc2626;\r\n      --line:#e5e7eb;\r\n    }\r\n    html,body{margin:0;padding:0;background:var(--bg);color:var(--ink);\r\n      font-family:Inter,Segoe UI,system-ui,-apple-system,Helvetica,Arial,sans-serif;line-height:1.55}\r\n    .hero{background:linear-gradient(180deg,#0f172a 0%,#1f2937 60%,#334155 100%);color:#fff;padding:56px 24px 40px}\r\n    .wrap{max-width:1080px;margin:0 auto}\r\n    h1{font-size:clamp(28px,4vw,40px);letter-spacing:.2px;margin:0 0 8px}\r\n    .subtitle{color:#e5e7eb;font-size:15px}\r\n    .pill{display:inline-block;background:#BDBDBD;color:#111827;border-radius:999px;padding:6px 10px;font-size:12px;margin:0 8px 0 0}\r\n    .content{padding:28px 24px}\r\n    h2{font-size:clamp(22px,3vw,28px);margin:28px 0 10px}\r\n    h3{font-size:18px;margin:18px 0 6px}\r\n    p{margin:10px 0}\r\n    a{color:var(--brand);text-decoration:none}\r\n    a:hover{text-decoration:underline}\r\n    .grid{display:grid;grid-template-columns:repeat(12,1fr);gap:16px}\r\n    .card{\r\n      grid-column:span 12;background:#fff;border:1px solid var(--line);border-radius:14px;padding:18px;\r\n      box-shadow:0 1px 0 rgba(16,24,40,.04)\r\n    }\r\n    .note{background:var(--bg-soft);color:#111827;border-radius:12px;padding:12px 14px}\r\n    .list{margin:6px 0 0 18px}\r\n    .kv{display:grid;grid-template-columns:160px 1fr;gap:8px;margin:10px 0}\r\n    .kv div:first-child{color:#6b7280}\r\n    code,pre{background:var(--bg-soft);color:#111827;border-radius:8px}\r\n    code{padding:2px 6px}\r\n    pre{padding:12px 14px;overflow:auto;border:1px solid var(--line)}\r\n    .two{display:grid;grid-template-columns:1fr;gap:14px}\r\n    @media(min-width:920px){.two{grid-template-columns:1fr 1fr}}\r\n    .footer{border-top:1px dashed var(--line);margin-top:28px;padding-top:18px;color:#6b7280;font-size:14px}\r\n    table{border-collapse:collapse;width:100%;background:#fff;border:1px solid var(--line);border-radius:12px;overflow:hidden}\r\n    th,td{padding:10px 12px;border-bottom:1px solid var(--line);text-align:left}\r\n    th{background:#f8fafc;color:#111827}\r\n  </style>\r\n</head>\r\n<body>\r\n  <!-- HERO -->\r\n  <header class=\"hero\">\r\n    <div class=\"wrap\">\r\n      <span class=\"pill\">Labeling at Scale</span>\r\n      <span class=\"pill\">OpenAI API</span>\r\n      <h1>LLM‑Powered Data Labeling (API)</h1>\r\n      <p class=\"subtitle\">Classify product names into grocery families using a JSON‑strict prompt and write back to CSV. Built for large datasets and Codespaces‑friendly.</p>\r\n    </div>\r\n  </header>\r\n\r\n  <main class=\"content wrap\">\r\n\r\n    <!-- OVERVIEW -->\r\n    <section class=\"card\">\r\n      <h2>Overview</h2>\r\n      <div class=\"kv\"><div>What</div><div>A Python script that calls an LLM to <strong>classify each row</strong> into one of 10 grocery “families”, writing the result to a new CSV column.</div></div>\r\n      <div class=\"kv\"><div>Why</div><div>Fast, consistent labeling for large, messy product lists — ideal for bootstrapping taxonomies, analytics, and merchandising.</div></div>\r\n      <div class=\"kv\"><div>Dataset</div><div>Use your own CSV, or try the sample: <a href=\"https://github.com/AIforimpact22/learningexamples/blob/main/datacleaning.csv\" target=\"_blank\" rel=\"noopener\">datacleaning.csv</a></div></div>\r\n      <p class=\"note\"><strong>Key idea:</strong> We enforce JSON output (<code>response_format={\"type\":\"json_object\"}</code>) and validate it, so every call yields a deterministic <em>family</em> string, even if the model replies creatively.</p>\r\n    </section>\r\n\r\n    <!-- QUICK START -->\r\n    <section class=\"card\">\r\n      <h2>Quick start (Codespaces or local)</h2>\r\n      <div class=\"two\">\r\n        <div>\r\n          <h3>1) Prepare files</h3>\r\n          <pre><code># in your repo (example paths)\r\nmkdir -p /workspaces/testinggptapi\r\ncurl -L -o /workspaces/testinggptapi/dataset.csv \\\r\n  https://raw.githubusercontent.com/AIforimpact22/learningexamples/main/datacleaning.csv\r\n\r\n# save the Python below as:\r\n#   /workspaces/testinggptapi/classify_items.py\r\n</code></pre>\r\n          <h3>2) Install + set API key</h3>\r\n          <pre><code>pip install --upgrade openai\r\nexport OPENAI_API_KEY=\"sk-...your key...\"\r\n</code></pre>\r\n          <h3>3) Run</h3>\r\n          <pre><code>python /workspaces/testinggptapi/classify_items.py\r\n# Output → /workspaces/testinggptapi/dataset_classified.csv</code></pre>\r\n        </div>\r\n        <div>\r\n          <h3>What you get</h3>\r\n          <table>\r\n            <thead><tr><th>name</th><th>…</th><th>family (NEW)</th></tr></thead>\r\n            <tbody>\r\n              <tr><td>Organic Gala Apples 1kg</td><td>…</td><td>Fresh Produce</td></tr>\r\n              <tr><td>Whole Milk 1L</td><td>…</td><td>Dairy & Eggs</td></tr>\r\n              <tr><td>Basmati Rice 5kg</td><td>…</td><td>Pantry & Dry Goods</td></tr>\r\n            </tbody>\r\n          </table>\r\n          <p class=\"note\"><strong>Tip:</strong> Adjust <code>INPUT_CSV</code> / <code>OUTPUT_CSV</code> to your folder. The script pauses slightly between calls to be rate‑limit friendly.</p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- SCRIPT -->\r\n    <section class=\"card\">\r\n      <h2>Classifier script (copy/paste)</h2>\r\n      <pre><code>#!/usr/bin/env python3\r\n# classify_items.py\r\n# pip install openai\r\n\r\nimport os\r\nimport csv\r\nimport json\r\nimport time\r\nfrom typing import List\r\nfrom openai import OpenAI\r\n\r\n# ---- Config ----\r\nINPUT_CSV  = \"/workspaces/testinggptapi/dataset.csv\"\r\nOUTPUT_CSV = \"/workspaces/testinggptapi/dataset_classified.csv\"\r\nMODEL = \"gpt-4o-mini\"  # \"4o mini\"\r\nRATE_LIMIT_PACING_SEC = 0.1  # tiny pause between calls\r\n\r\nFAMILIES: List[str] = [\r\n    \"Fresh Produce\",\r\n    \"Dairy & Eggs\",\r\n    \"Meat & Poultry\",\r\n    \"Seafood\",\r\n    \"Bakery & Cereals\",\r\n    \"Pantry & Dry Goods\",\r\n    \"Oils, Sauces & Condiments\",\r\n    \"Snacks & Confectionery\",\r\n    \"Beverages\",\r\n    \"Household & Cleaning\",\r\n]\r\n\r\nSYSTEM_INSTRUCTIONS = (\r\n    \"You are a precise classification assistant. \"\r\n    \"Given a grocery/retail product name, choose EXACTLY one family from the provided list. \"\r\n    \"Return ONLY JSON with keys: family (string) and index (integer 0-based index in the list). \"\r\n    \"The 'family' value must match one of the allowed strings character-for-character. \"\r\n    \"No explanations.\"\r\n)\r\n\r\ndef make_prompt(name: str) -> str:\r\n    return (\r\n        \"Allowed families (0-based index):\\n\"\r\n        + \"\\n\".join(f\"{i}. {fam}\" for i, fam in enumerate(FAMILIES))\r\n        + \"\\n\\nClassify this item name into exactly one family:\\n\"\r\n        f\"name: {name}\\n\"\r\n        \"Respond as a JSON object like {\\\"family\\\":\\\"...\\\",\\\"index\\\":N}.\"\r\n    )\r\n\r\ndef classify_name(client: OpenAI, name: str) -> str:\r\n    \\\"\\\"\\\"Call gpt-4o-mini to classify and return the exact family string.\\\"\\\"\\\"\r\n    resp = client.chat.completions.create(\r\n        model=MODEL,\r\n        temperature=0,\r\n        response_format={\\\"type\\\": \\\"json_object\\\"},\r\n        messages=[\r\n            {\\\"role\\\": \\\"system\\\", \\\"content\\\": SYSTEM_INSTRUCTIONS},\r\n            {\\\"role\\\": \\\"user\\\", \\\"content\\\": make_prompt(name)},\r\n        ],\r\n        max_tokens=64,\r\n    )\r\n    content = resp.choices[0].message.content\r\n    try:\r\n        data = json.loads(content)\r\n        fam = (data.get(\\\"family\\\") or \\\"\\\").strip()\r\n        # Minimal guard: ensure it’s one of the allowed; otherwise default to Pantry.\r\n        if fam not in FAMILIES:\r\n            fam = \\\"Pantry & Dry Goods\\\"\r\n        return fam\r\n    except Exception:\r\n        # If anything odd happens, fall back deterministically\r\n        return \\\"Pantry & Dry Goods\\\"\r\n\r\ndef main():\r\n    api_key = os.getenv(\\\"OPENAI_API_KEY\\\", \\\"\\\").strip()\r\n    if not api_key:\r\n        raise SystemExit(\r\n            \\\"Missing OPENAI_API_KEY. Set it with:\\\\n  export OPENAI_API_KEY='sk-...'\\\\n\\\"\r\n        )\r\n\r\n    client = OpenAI(api_key=api_key)\r\n\r\n    with open(INPUT_CSV, newline=\\\"\\\", encoding=\\\"utf-8\\\") as f_in, \\\r\n         open(OUTPUT_CSV, \\\"w\\\", newline=\\\"\\\", encoding=\\\"utf-8\\\") as f_out:\r\n\r\n        reader = csv.DictReader(f_in)\r\n        fieldnames = list(reader.fieldnames or [])\r\n        if \\\"family\\\" not in fieldnames:\r\n            fieldnames.append(\\\"family\\\")\r\n\r\n        writer = csv.DictWriter(f_out, fieldnames=fieldnames)\r\n        writer.writeheader()\r\n\r\n        for row in reader:\r\n            name = (row.get(\\\"name\\\") or \\\"\\\").strip()\r\n            family = classify_name(client, name)\r\n            row[\\\"family\\\"] = family\r\n            writer.writerow(row)\r\n            time.sleep(RATE_LIMIT_PACING_SEC)\r\n\r\n    print(f\\\"Done. Wrote classified dataset → {OUTPUT_CSV}\\\")\r\n\r\nif __name__ == \\\"__main__\\\":\r\n    main()</code></pre>\r\n      <p class=\"note\"><strong>Why this works well for large data:</strong> strict JSON, fixed label set, a deterministic fallback, and gentle pacing keep the pipeline stable and easy to resume.</p>\r\n    </section>\r\n\r\n    <!-- SCALING & QUALITY -->\r\n    <section class=\"card\">\r\n      <h2>Scaling & quality tips</h2>\r\n      <ul class=\"list\">\r\n        <li><strong>Batching:</strong> For very large files, classify <em>10–25 items per call</em> and return a JSON array to cut cost/latency.</li>\r\n        <li><strong>Checkpointing:</strong> Write output incrementally (already done) and store the last processed row index in a small state file to resume.</li>\r\n        <li><strong>Rate limits:</strong> Keep a short sleep (0.1–0.2s). If you hit 429/5xx, retry with exponential backoff.</li>\r\n        <li><strong>Auditing:</strong> Sample 100 rows after labeling to estimate accuracy; refine the family list and system instructions if needed.</li>\r\n        <li><strong>Privacy:</strong> Don’t send PII or proprietary secrets in prompts. Log only what you need for debugging.</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <!-- WHY LLM LABELING -->\r\n    <section class=\"card\">\r\n      <h2>Why LLM‑based labeling is excellent for huge data</h2>\r\n      <p>Rules and regexes break on messy names. The LLM uses context to infer category even when wording varies (brand + size + pack + “promo” text). With a tight prompt and a fixed label set, you can reach strong first‑pass accuracy and then iterate with small manual fixes.</p>\r\n    </section>\r\n\r\n    <section class=\"footer\">\r\n      <div>Dataset example: <a href=\"https://github.com/AIforimpact22/learningexamples/blob/main/datacleaning.csv\" target=\"_blank\" rel=\"noopener\">datacleaning.csv</a></div>\r\n      <div>Paths shown use GitHub Codespaces (<code>/workspaces/…</code>). Adjust if running locally.</div>\r\n    </section>\r\n  </main>\r\n</body>\r\n</html>"
      },
      "lesson_uid": "ee8a7bc2-0c93-4f39-8144-b88b60e651f6"
    }
  ]
}